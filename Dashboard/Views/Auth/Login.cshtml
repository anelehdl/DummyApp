@{
    ViewData["Title"] = "Login Page";
}
@model Core.Models.DTO.LoginRequestDto

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    :root {
        --primary: #4e73df;
        --secondary: #858796;
        --accent: #6f9bff;
        --glass: rgba(255, 255, 255, 0.1);
        --glass-border: rgba(255, 255, 255, 0.2);
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(120deg, var(--primary) 0%, var(--secondary) 40%, var(--accent) 80%);
        color: white;
        min-height: 100vh;
        background-size: 400% 400%;
        animation: bgShift 15s ease-in-out infinite;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
    }

    @@keyframes bgShift {
        0% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }
    }

    .login-container {
        max-width: 500px;
        width: 100%;
        margin: 0 auto;
    }

    .login-panel {
        background: var(--glass);
        backdrop-filter: blur(20px);
        border: 1px solid var(--glass-border);
        border-radius: 20px;
        padding: 2rem;
        transform: translateY(0);
        transition: transform 0.3s ease-in-out;
    }

        .login-panel:hover {
            transform: translateY(-5px);
        }

        .login-panel h1 {
            font-size: 2rem;
            margin-bottom: 1rem;
            text-shadow: 2px 4px 6px var(--glass-border);
        }

        .login-panel p {
            margin-bottom: 2rem;
            opacity: 0.9;
        }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
    }

    .form-control {
        width: 100%;
        background: rgba(255, 255, 255, 0.15);
        border: 1px solid var(--glass-border);
        color: white;
        padding: 0.75rem;
        border-radius: 8px;
        margin-bottom: 0.5rem;
        transition: all 0.3s ease;
    }

        .form-control::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

        .form-control:focus {
            background: rgba(255, 255, 255, 0.2);
            border-color: white;
            color: white;
            outline: none;
            box-shadow: 0 0 0 0.2rem rgba(255, 255, 255, 0.25);
        }

    .mb-3 {
        margin-bottom: 1rem;
    }

    .mb-4 {
        margin-bottom: 1.5rem;
    }

    .btn-light {
        width: 100%;
        background: white;
        color: var(--primary);
        font-weight: 600;
        padding: 0.75rem;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 1rem;
    }

        .btn-light:hover {
            background: rgba(255, 255, 255, 0.9);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

    .alert {
        padding: 1rem;
        border-radius: 10px;
        margin-bottom: 1.5rem;
    }

    .alert-danger {
        background: rgba(220, 53, 69, 0.2);
        border: 1px solid rgba(220, 53, 69, 0.4);
        color: white;
    }

    .text-danger {
        color: #ff6b6b;
        font-size: 0.875rem;
        display: block;
        margin-top: 0.25rem;
    }

    .text-center {
        text-align: center;
    }

    .back-link {
        display: inline-block;
        margin-top: 1rem;
        color: rgba(255, 255, 255, 0.8);
        text-decoration: none;
        transition: color 0.3s ease;
    }

        .back-link:hover {
            color: white;
        }

    @@media (max-width: 768px) {
        .login-panel h1 {
            font-size: 1.5rem;
        }
    }
</style>

<div class="login-container">
    <div class="login-panel">
        <h1 class="text-center">Login to Continue</h1>
        <p class="text-center">Please sign in to access your dashboard</p>

        @if (ViewData.ModelState.ErrorCount > 0 || ViewBag.Error is string)
        {
            <div class="alert alert-danger" role="alert">
                <strong>Login Failed!</strong>
                @if (ViewBag.Error is string errorMsg)
                {
                    <div>@errorMsg</div>
                }
                else
                {
                    <div asp-validation-summary="ModelOnly"></div>
                }
            </div>
        }

        <form asp-action="Login" method="post">
            @Html.AntiForgeryToken()

            <div class="mb-3">
                <label asp-for="Email" class="form-label">Email</label>
                <input asp-for="Email" type="email" class="form-control" placeholder="Enter your email" required />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="mb-4">
                <label asp-for="Password" class="form-label">Password</label>
                <input asp-for="Password" type="password" class="form-control" placeholder="Enter your password" required />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <button type="submit" class="btn-light">Login</button>

            <div class="text-center">
                <a asp-controller="Home" asp-action="Index" class="back-link">← Back to Dashboard</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}